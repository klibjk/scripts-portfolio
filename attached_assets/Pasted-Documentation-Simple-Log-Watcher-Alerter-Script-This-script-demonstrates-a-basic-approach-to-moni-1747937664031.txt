Documentation: Simple Log Watcher & Alerter Script
This script demonstrates a basic approach to monitoring log files for specific patterns, such as repeated failed login attempts, which can be an indicator of a security event.

1. Simple Log Watcher & Alerter - Bash Version
Purpose:
This Bash script provides a basic mechanism to monitor Linux authentication logs (/var/log/auth.log or /var/log/secure) for a configurable number of "Failed password" attempts within a recent time window. It's a simplified example for identifying potential brute-force attacks or unauthorized access attempts.

Operating System Compatibility:

Linux (Debian/Ubuntu, RHEL/CentOS/Fedora, and other distributions that use /var/log/auth.log or /var/log/secure for SSH login attempts).
Less effective on macOS for this specific log file; macOS uses a different logging system (log show) for detailed SSHD events.
Prerequisites:

Standard Unix/Linux command-line utilities (grep, date, awk, sudo).
sudo access is required to read authentication logs, which are typically restricted.
The date command's ability to parse relative times (e.g., "5 minutes ago") is used. GNU date (common on Linux) and BSD date (common on macOS) have different syntaxes, and the script attempts to accommodate both for the time window calculation.
Configuration (within the script):

LOG_FILE: Automatically detected (auth.log or secure).
SEARCH_PATTERN: The text pattern to search for (default: "Failed password for").
TIME_WINDOW_MINUTES: How far back to check in the logs (default: 5 minutes).
FAILED_ATTEMPT_THRESHOLD: Number of matches to trigger an alert (default: 3).
Usage:

Save the script to a file (e.g., log_watcher_ssh.sh).
Make the script executable: chmod +x log_watcher_ssh.sh
Run the script with sudo: sudo ./log_watcher_ssh.sh
Output:
The script outputs:

Its configuration (log file, threshold, time window).
A summary of findings for the specified time window.
If the threshold is met or exceeded, it prints a "⚠️ ALERT" message, including the count of failed attempts and any extracted IP addresses associated with those attempts.
If the threshold is not met, it prints an "✅ No significant failed login activity detected" message.
Example Snippet of Output:

--------------------------------------------------
Failed Login Attempt Monitor - Thu May 22 13:58:20 EDT 2025
Monitoring log: /var/log/auth.log
Alert threshold: 3 failed attempts in 5 minutes.
--------------------------------------------------

--- Results for the last 5 minutes ---
⚠️ ALERT: 5 failed login attempts detected!
Potential source IPs (if found): 192.168.1.101 10.0.0.55
Consider checking the log file (/var/log/auth.log) for details and potentially blocking IPs.

--------------------------------------------------
Monitoring Complete.
--------------------------------------------------
Notes:

This is a simple log watcher and not a replacement for robust intrusion detection systems like fail2ban or centralized logging solutions (e.g., SIEM).
Timestamp parsing from logs can be fragile; this script uses a basic approach. More complex log formats might require more sophisticated parsing.
IP address extraction is based on a common pattern and might not capture IPs in all log message formats.
For production use, consider actions beyond printing to console, such as sending email alerts or integrating with a ticketing system.
For macOS, a different approach using log show --last <time> --predicate 'process == "sshd" and eventMessage contains "Failed"' would be more accurate for SSHD logs.
2. Simple Log Watcher & Alerter - PowerShell Version
Purpose:
This PowerShell script monitors the Windows Security Event Log for multiple failed login attempts (Event ID 4625) within a specified time window. It aims to provide an early warning for potential brute-force attacks or unauthorized access attempts against Windows systems.

Operating System Compatibility:

Windows 10, Windows 11
Windows Server 2016, 2019, 2022
(Requires PowerShell 5.1 or later)
Prerequisites:

PowerShell 5.1 or higher.
Administrator privileges are required to read the Security Event Log.
Ensure "Audit Logon Events" (specifically "Audit Account Logon Events" and "Audit Logon") policies are enabled in Windows to generate Event ID 4625. Success and Failure should be audited for "Audit Logon."
Configuration (parameters when running the script):

-TimeWindowMinutes: How far back to check in the event log (default: 15 minutes).
-FailedAttemptThreshold: Number of Event ID 4625 occurrences to trigger an alert (default: 5).
Usage:

Save the script to a file (e.g., Watch-FailedLogins.ps1).
Open PowerShell as an Administrator.
Navigate to the directory where you saved the script.
Run the script: .\Watch-FailedLogins.ps1
To use custom parameters: .\Watch-FailedLogins.ps1 -TimeWindowMinutes 10 -FailedAttemptThreshold 3
If script execution is disabled, you may need to adjust the execution policy.
Output:
The script outputs:

Its configuration parameters.
A status message indicating it's querying events.
If the number of detected failed logins (Event ID 4625) meets or exceeds the threshold, it displays a Write-Warning "ALERT" message along with details of the first 10 detected failed attempts (Time, Target User, Workstation, Source IP, Logon Type, Status Code).
If the threshold is not met, it indicates that no significant failed login activity was detected.
Error messages if it cannot query the Security Event Log (e.g., due to lack of permissions).
Example Snippet of Output:

--------------------------------------------------
Failed Login Attempt Monitor (Event ID 4625) - 05/22/2025 13:58:20
Monitoring Security Event Log.
Alert threshold: 5 failed attempts in 15 minutes.
--------------------------------------------------
Querying events since 05/22/2025 13:43:20...

--- Results for the last 15 minutes ---
WARNING: ALERT: 7 failed login attempts (Event ID 4625) detected!
Details of failed attempts:

TimeCreated           TargetUserName WorkstationName SourceNetworkAddress LogonType Status
-----------           -------------- --------------- -------------------- --------- ------
5/22/2025 1:55:10 PM  Administrator  CLIENTPC01      192.168.1.105               2 0xc000006d
5/22/2025 1:55:05 PM  AdminUser      CLIENTPC01      192.168.1.105               2 0xc000006d
...
Consider investigating these attempts.

--------------------------------------------------
Monitoring Complete.
--------------------------------------------------
Notes:

This script focuses specifically on Event ID 4625 ("An account failed to log on"). Other event IDs might also be relevant for a comprehensive security monitoring strategy.
The effectiveness depends on proper audit policies being configured on the Windows system.
For real-time alerting or integration with other systems (e.g., SIEM, ticketing), the script would need to be extended (e.g., send an email, write to a central log, trigger a webhook).
This script provides a reactive alert; proactive measures like strong password policies, account lockout policies, and multi-factor authentication are crucial.